/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exactool.ui;

import exactool.ExtractorDefinitions;
import java.io.File;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.SwingUtilities;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author flip
 */
public class PreferencesDialogGnomad extends javax.swing.JDialog {

    boolean init = true;
    ExacToolFrame parent;
    String geneDataOrg,cacheOrg;
    /**
     * Creates new form PreferencesDialog
     */
    public PreferencesDialogGnomad(java.awt.Frame parent, boolean modal) {        
        super(parent, modal);
        if(parent instanceof ExacToolFrame)
            this.parent = (ExacToolFrame)parent;
        initComponents();
        initialize();
        
        this.setSize(650, 200);        
        this.setLocationRelativeTo(parent);
        
        geneDataField.setText(ExtractorDefinitions.GENE_SUMMARY_FILE);        
        cacheField.setText(ExtractorDefinitions.CACHED_PATH);
        
        geneDataOrg = geneDataField.getText();
        cacheOrg = cacheField.getText();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        variantButtonGroup = new javax.swing.ButtonGroup();
        preferenceTabbedPane = new javax.swing.JTabbedPane();
        filePreferencePanel = new javax.swing.JPanel();
        geneDataButton = new javax.swing.JButton();
        geneDataField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cacheButton = new javax.swing.JButton();
        cacheField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        clearCacheButton = new javax.swing.JButton();
        visualizationPreferencePanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        lafBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        dotsButton = new javax.swing.JRadioButton();
        stripesButton = new javax.swing.JRadioButton();
        otherButton = new javax.swing.JRadioButton();
        sizeBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Preference editor");
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        filePreferencePanel.setLayout(new java.awt.GridBagLayout());

        geneDataButton.setText("Browse...");
        geneDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geneDataButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        filePreferencePanel.add(geneDataButton, gridBagConstraints);

        geneDataField.setText("Gene summary file...");
        geneDataField.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        filePreferencePanel.add(geneDataField, gridBagConstraints);

        jLabel3.setText("GeneData Summary file: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        filePreferencePanel.add(jLabel3, gridBagConstraints);

        cacheButton.setText("Browse...");
        cacheButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cacheButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        filePreferencePanel.add(cacheButton, gridBagConstraints);

        cacheField.setText("Path to cache folder...");
        cacheField.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        filePreferencePanel.add(cacheField, gridBagConstraints);

        jLabel4.setText("Cache Folder: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        filePreferencePanel.add(jLabel4, gridBagConstraints);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Please specify the file and folder locations...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        filePreferencePanel.add(jLabel5, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        jPanel1.add(saveButton, gridBagConstraints);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        jPanel1.add(cancelButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1;
        filePreferencePanel.add(jPanel1, gridBagConstraints);

        clearCacheButton.setText("Clear Cache...");
        clearCacheButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearCacheButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        filePreferencePanel.add(clearCacheButton, gridBagConstraints);

        preferenceTabbedPane.addTab("Files and Folders", filePreferencePanel);

        visualizationPreferencePanel.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText("General Look and Feel: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        visualizationPreferencePanel.add(jLabel6, gridBagConstraints);

        lafBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lafBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        visualizationPreferencePanel.add(lafBox, gridBagConstraints);

        jLabel7.setText("Display variants as: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        visualizationPreferencePanel.add(jLabel7, gridBagConstraints);

        dotsButton.setText("Dots");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        visualizationPreferencePanel.add(dotsButton, gridBagConstraints);

        stripesButton.setText("Stripes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        visualizationPreferencePanel.add(stripesButton, gridBagConstraints);

        otherButton.setText("Sloth");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        visualizationPreferencePanel.add(otherButton, gridBagConstraints);

        sizeBox.setText("Increase variant sizes");
        sizeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        visualizationPreferencePanel.add(sizeBox, gridBagConstraints);

        preferenceTabbedPane.addTab("Visualization", visualizationPreferencePanel);

        getContentPane().add(preferenceTabbedPane);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initialize(){
        setLookAndFeels();
        variantButtonGroup.add(dotsButton);
        variantButtonGroup.add(stripesButton);
        variantButtonGroup.add(otherButton);
    }
    private void geneDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geneDataButtonActionPerformed
        //parent.specifyDataFolder();
        parent.specifyGeneSummaryData();
        geneDataField.setText(ExtractorDefinitions.GENE_SUMMARY_FILE);
    }//GEN-LAST:event_geneDataButtonActionPerformed

    private void cacheButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cacheButtonActionPerformed
        parent.specifyCacheFolder();
        cacheField.setText(ExtractorDefinitions.CACHED_PATH);
    }//GEN-LAST:event_cacheButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        parent.setCacheFolder(cacheOrg);
        parent.setDataFolder(geneDataOrg);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void clearCacheButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearCacheButtonActionPerformed
        if(JOptionPane.showConfirmDialog(this, "Are you sure you want to clear the cache?") == JOptionPane.OK_OPTION)
            purgeDirectory(new File(cacheField.getText()));        
    }//GEN-LAST:event_clearCacheButtonActionPerformed

    private void lafBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lafBoxActionPerformed
        if(evt != null && !init)
            ExtractorDefinitions.USER_LAF = (String)lafBox.getSelectedItem();            
        parent.setLookAndFeel(ExtractorDefinitions.USER_LAF);        
    }//GEN-LAST:event_lafBoxActionPerformed

    private void sizeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeBoxActionPerformed
        
    }//GEN-LAST:event_sizeBoxActionPerformed

    void purgeDirectory(File dir) {
        for (File file: dir.listFiles()) {
            if (file.isDirectory()) purgeDirectory(file);
            file.delete();
        }        
    }
    
                                      
    
    private void setLookAndFeels(){
        init = true;
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {                        
            lafBox.addItem(info.getName());
        }
        init = false;
        lafBox.setSelectedItem(ExtractorDefinitions.USER_LAF);
        
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cacheButton;
    private javax.swing.JTextField cacheField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton clearCacheButton;
    private javax.swing.JRadioButton dotsButton;
    private javax.swing.JPanel filePreferencePanel;
    private javax.swing.JButton geneDataButton;
    private javax.swing.JTextField geneDataField;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> lafBox;
    private javax.swing.JRadioButton otherButton;
    private javax.swing.JTabbedPane preferenceTabbedPane;
    private javax.swing.JButton saveButton;
    private javax.swing.JCheckBox sizeBox;
    private javax.swing.JRadioButton stripesButton;
    private javax.swing.ButtonGroup variantButtonGroup;
    private javax.swing.JPanel visualizationPreferencePanel;
    // End of variables declaration//GEN-END:variables
}
